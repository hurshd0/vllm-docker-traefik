version: "3"

services:
  #### 1. Traefil reverse proxy and load balancer
  traefik:
    image: traefik:v2.10
    restart: unless-stopped
    command:
      # Traefik static config
      # logs
      - --log=true
      - --log.filePath=./docker/logs/traefik.log
      - --log.level=INFO # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --accessLog=true
      - --accessLog.filePath=./docker/logs/access.log
      - --accessLog.bufferingSize=100 # Configuring a buffer of 100 lines
      - --accessLog.filters.statusCodes=204-299,400-499,500-599

      # Make sure your firewall allows HTTP/HTTPS
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443

      - --api=true
      - --providers.docker=true
 
      # LetsEncrypt Staging Server - uncomment when testing
      - --certificatesresolvers.letsencrypt.acme.httpchallenge=true
      - --certificatesresolvers.myresolver.acme.httpchallenge.entrypoint=web
      - --certificatesresolvers.letsencrypt.acme.email=${EMAIL} # Your email for Let's Encrypt notifications
      - --certificatesresolvers.letsencrypt.acme.storage=/letsencrypt/acme.json
    labels:
      # Redirect all HTTP traffic to HTTPS
      - traefik.http.routers.to-https.rule=HostRegexp(`{host:.+}`)
      - traefik.http.routers.to-https.entrypoints=http
      - traefik.http.routers.to-https.middlewares=to-https

      - traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)
      - traefik.http.routers.traefik.entrypoints=https
      - traefik.http.routers.traefik.middlewares=auth
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.tls=true
      - traefik.http.routers.traefik.tls.certresolver=${CERT_RESOLVER}

      - traefik.http.middlewares.to-https.redirectscheme.scheme=https
      - traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_USER}:${TRAEFIK_PASSWORD_HASH}
      
      
    ports:
        # HTTP port
      - 80:80
      - 443:443
    volumes:
      - ./docker/cert/letsencrypt:/letsencrypt # Store's Let's Encrypt certificates here; make sure it's secure
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - vllm_proxy
     

  #### 2. vLLM server 
  vllm:
    image: vllm/vllm-openai:latest
    restart: unless-stopped
    # vLLM server config
    command:
      --model ${MODEL_NAME}
      --env "HUGGING_FACE_HUB_TOKEN=${HF_TOKEN}"
    volumes:
      - ~/.cache/huggingface:/root/.cache/huggingface:rw
    labels:
      - "traefik.http.routers.vllm.tls=true"
      - "traefik.http.routers.vllm.entrypoints=https"
      - "traefik.http.routers.vllm.rule=Host(`${DOMAIN}`)" # Replace with your domain
      - "traefik.http.services.vllm.loadbalancer.server.port: 8000" # Port of vLLM server
      - "traefik.http.routers.https.tls.certresolver=${CERT_RESOLVER}" # lets encrypt for public server
    networks:
      - vllm_proxy

networks:
  vllm_proxy:
    external: true